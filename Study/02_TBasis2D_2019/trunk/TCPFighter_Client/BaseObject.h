
#ifndef __BASE_OBJECT__
#define __BASE_OBJECT__

/*---------------------------------------------------------------

모든 객체의 베이스 클래스로 써
화면상에 나오는 모든 객체들은 본 클래스를 상속받는다.



---------------------------------------------------------------*/


class CBaseObject
{
public:

	////////////////////////////////////////////////////////////////////
	// 생성자, 파괴자.
	//
	////////////////////////////////////////////////////////////////////
			CBaseObject(int iObjectType, int iObjectID);
	virtual ~CBaseObject();



	// =================================================================
	// 오브젝트 정보 관련 함수.
	//
	// =================================================================
	////////////////////////////////////////////////////////////////////
	// 현재 위치 얻기.
	//
	// Parameters: 없음.
	// Return: (int)위치값.
	////////////////////////////////////////////////////////////////////
	int		GetOldX(void);
	int		GetOldY(void);
	int		GetCurX(void);
	int		GetCurY(void) const;

	////////////////////////////////////////////////////////////////////
	// 현재 위치 설정.
	//
	// Parameters: (int)X. (int)Y.
	// Return: 없음.
	////////////////////////////////////////////////////////////////////
	void	SetCurPosition(int iX, int iY);
	void	SetOldPosition(int iX, int iY);
	void	SetPosition(int iX, int iY);

	////////////////////////////////////////////////////////////////////
	// 오브젝트 Type, ID 얻기.
	//
	// Parameters: 없음.
	// Return: (int)Type or ID.
	////////////////////////////////////////////////////////////////////
	int		GetObjectType(void) const;
	int		GetObjectID(void);

	////////////////////////////////////////////////////////////////////
	// 오브젝트 Type, ID 설정.
	//
	// Parameters: (int)Type or ID.
	// Return: 없음.
	////////////////////////////////////////////////////////////////////
	void	SetObjectType(int iType);
	void	SetObjectID(int iID);

	////////////////////////////////////////////////////////////////////
	// 스프라이트 정보 입력.
	//
	// Parameters: (int)SpriteStart. (int)SpriteMax. (int)FrameDelay.
	// Return: 없음.
	////////////////////////////////////////////////////////////////////
	void	SetSprite(int iSpriteStart, int iSpriteMax, int iFrameDelay);

	////////////////////////////////////////////////////////////////////
	// 스프라이트 정보 얻음
	//
	// Parameters: 없음.
	// Return: (int)Sprite.
	////////////////////////////////////////////////////////////////////
	int		GetSprite(void);

	////////////////////////////////////////////////////////////////////
	// 다음 프레임으로 넘김.
	//
	// Parameters: 없음.
	// Return: 없음.
	////////////////////////////////////////////////////////////////////
	void	NextFrame(void);


	////////////////////////////////////////////////////////////////////
	// 현재 스프라이트 에니메이션이 마지막 인지 확인
	//
	// Parameters: 없음.
	// Return: (int)Sprite.
	////////////////////////////////////////////////////////////////////
	int		IsEndFrame(void);


	////////////////////////////////////////////////////////////////////
	// 액션 입력.
	//
	// Parameters: (DWORD)Action.
	// Return: 없음.
	////////////////////////////////////////////////////////////////////
	void	ActionInput(DWORD dwAction);



	// =================================================================
	// 오브젝트 공통 인터페이스 가상함수.
	//
	// =================================================================
	////////////////////////////////////////////////////////////////////
	// 오브젝트 액션 가상함수.
	//
	// Parameters: (DWORD)Param.
	// Return: (DWORD)Value.
	////////////////////////////////////////////////////////////////////
	virtual	DWORD		Action(DWORD dwParam) = 0;

	////////////////////////////////////////////////////////////////////
	// 오브젝트 그리기 가상함수.
	//
	// Parameters: (BYTE *)DestPtr. (int)DestWidth. (int)DestHeight. (int)DestPitch.
	// Return: (DWORD)Value.
	////////////////////////////////////////////////////////////////////
	virtual	DWORD		Draw(BYTE *bypDest, int iDestWidth, int iDestHeight, int iDestPitch) = 0;



protected:


	//------------------------------------------------------------------
	// 오브젝트 정보
	//------------------------------------------------------------------
	int		m_iObjectType; //스파크, 이팩트, 케릭터
	int		m_iObjectID;

	//------------------------------------------------------------------
	// 위치정보.
	//------------------------------------------------------------------
	int		m_iOldX;
	int		m_iOldY;
	int		m_iCurX;
	int		m_iCurY;

	//------------------------------------------------------------------
	// 스프라이트 정보.
	//------------------------------------------------------------------
	int		m_iSpriteStart;
	int		m_iSpriteNow;
	int		m_iSpriteMax;
	BOOL	m_bEndFrame;			// 현재 프레임이 에니메이션의 끝인지 체크.

	int		m_iFrameDelay;
	int		m_iDelayCount;

	//------------------------------------------------------------------
	// 액션 입력.
	//------------------------------------------------------------------
	DWORD	m_dwActionInput;


};

#endif